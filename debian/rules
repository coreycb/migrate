#!/usr/bin/make -f

UPSTREAM_GIT := https://github.com/openstack/sqlalchemy-migrate.git
include /usr/share/openstack-pkg-tools/pkgos.make

LAST_CHANGE = $(shell dpkg-parsechangelog -S Date)
BUILD_DATE  = $(shell LC_ALL=C date -u "+%B %d, %Y" -d "$(LAST_CHANGE)")

%:
	dh $@ --buildsystem=python_distutils --with python3,sphinxdoc

override_dh_auto_clean:
	rm -rf dist build
	find . -name '*\.py[co]' -exec rm {} \;
	rm -f docs/reference.txt debian/install
	cp debian/test_db.cfg $(CURDIR)
	rm -rf .testrepository

override_dh_auto_build:
	echo "Do nothing..."

override_dh_auto_install:
	pkgos-dh_auto_install --no-py2

override_dh_sphinxdoc:
ifeq (,$(findstring nodoc, $(DEB_BUILD_OPTIONS)))
	PYTHONPATH=$(CURDIR) sphinx-build -b html -a -E -N -D today="$(BUILD_DATE)" doc/source debian/python-migrate-doc/usr/share/doc/python-migrate-doc/html/
	dh_sphinxdoc -O--buildsystem=python_distutils
endif

override_dh_installchangelogs:
	dh_installchangelogs -i doc/source/changelog.rst

override_dh_compress:
	dh_compress -i -X.py -X.rst -X.js -Xobjects.inv

override_dh_auto_test:
ifeq (,$(findstring nocheck, $(DEB_BUILD_OPTIONS)))
	chmod +x debian/test.sh

	# Create a working "migrate" binary, so that shell calls continue to
	# work even without python-migrate being installed
	mkdir -p debian/bin
	cp debian/migrate-for-tests debian/bin/migrate
	sed -i "s#REPLACE_THIS_PATH#$(CURDIR)#" debian/bin/migrate

	# Create a minimalist egg-info, so that "import migrate"
	# works and gets the correct version
	mkdir -p sqlalchemy_migrate-$(VERSION).egg-info
	echo "Metadata-Version: 1.1" >sqlalchemy_migrate-$(VERSION).egg-info/PKG-INFO
	echo "Name: sqlalchemy-migrate" >>sqlalchemy_migrate-$(VERSION).egg-info/PKG-INFO
	echo "Version: $(VERSION)" >>sqlalchemy_migrate-$(VERSION).egg-info/PKG-INFO

	# Launch the actual tests
	$(CURDIR)/debian/test.sh

	# Clean everything
	rm -rf debian/bin
	rm -rf sqlalchemy_migrate-$(VERSION).egg-info
endif

override_dh_python3:
	dh_python3 --shebang=/usr/bin/python3
